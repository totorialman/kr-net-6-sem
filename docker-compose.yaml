services:
  main:
    build:
      context: .
      dockerfile: ./build/main.Dockerfile
    ports:
      - "8010:8010"
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - kr-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "2181"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    networks:
      - kr-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "9092"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    networks:
      - kr-network

networks:
  kr-network:
    driver: bridge
